/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The definition of the Rag resource.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-07T09:54:52.538010900+01:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GoogleCloudAiplatformV1VertexRagStoreRagResource {
  public static final String SERIALIZED_NAME_RAG_FILE_IDS = "ragFileIds";
  @SerializedName(SERIALIZED_NAME_RAG_FILE_IDS)
  private List<String> ragFileIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_RAG_CORPUS = "ragCorpus";
  @SerializedName(SERIALIZED_NAME_RAG_CORPUS)
  private String ragCorpus;

  public GoogleCloudAiplatformV1VertexRagStoreRagResource() {
  }

  public GoogleCloudAiplatformV1VertexRagStoreRagResource ragFileIds(List<String> ragFileIds) {
    this.ragFileIds = ragFileIds;
    return this;
  }

  public GoogleCloudAiplatformV1VertexRagStoreRagResource addRagFileIdsItem(String ragFileIdsItem) {
    if (this.ragFileIds == null) {
      this.ragFileIds = new ArrayList<>();
    }
    this.ragFileIds.add(ragFileIdsItem);
    return this;
  }

  /**
   * Optional. rag_file_id. The files should be in the same rag_corpus set in rag_corpus field.
   * @return ragFileIds
   */
  @javax.annotation.Nullable
  public List<String> getRagFileIds() {
    return ragFileIds;
  }

  public void setRagFileIds(List<String> ragFileIds) {
    this.ragFileIds = ragFileIds;
  }


  public GoogleCloudAiplatformV1VertexRagStoreRagResource ragCorpus(String ragCorpus) {
    this.ragCorpus = ragCorpus;
    return this;
  }

  /**
   * Optional. RagCorpora resource name. Format: &#x60;projects/{project}/locations/{location}/ragCorpora/{rag_corpus}&#x60;
   * @return ragCorpus
   */
  @javax.annotation.Nullable
  public String getRagCorpus() {
    return ragCorpus;
  }

  public void setRagCorpus(String ragCorpus) {
    this.ragCorpus = ragCorpus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1VertexRagStoreRagResource googleCloudAiplatformV1VertexRagStoreRagResource = (GoogleCloudAiplatformV1VertexRagStoreRagResource) o;
    return Objects.equals(this.ragFileIds, googleCloudAiplatformV1VertexRagStoreRagResource.ragFileIds) &&
        Objects.equals(this.ragCorpus, googleCloudAiplatformV1VertexRagStoreRagResource.ragCorpus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ragFileIds, ragCorpus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1VertexRagStoreRagResource {\n");
    sb.append("    ragFileIds: ").append(toIndentedString(ragFileIds)).append("\n");
    sb.append("    ragCorpus: ").append(toIndentedString(ragCorpus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ragFileIds");
    openapiFields.add("ragCorpus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1VertexRagStoreRagResource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1VertexRagStoreRagResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1VertexRagStoreRagResource is not found in the empty JSON string", GoogleCloudAiplatformV1VertexRagStoreRagResource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1VertexRagStoreRagResource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1VertexRagStoreRagResource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("ragFileIds") != null && !jsonObj.get("ragFileIds").isJsonNull() && !jsonObj.get("ragFileIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ragFileIds` to be an array in the JSON string but got `%s`", jsonObj.get("ragFileIds").toString()));
      }
      if ((jsonObj.get("ragCorpus") != null && !jsonObj.get("ragCorpus").isJsonNull()) && !jsonObj.get("ragCorpus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ragCorpus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ragCorpus").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1VertexRagStoreRagResource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1VertexRagStoreRagResource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1VertexRagStoreRagResource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1VertexRagStoreRagResource.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1VertexRagStoreRagResource>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1VertexRagStoreRagResource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1VertexRagStoreRagResource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1VertexRagStoreRagResource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1VertexRagStoreRagResource
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1VertexRagStoreRagResource
   */
  public static GoogleCloudAiplatformV1VertexRagStoreRagResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1VertexRagStoreRagResource.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1VertexRagStoreRagResource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

