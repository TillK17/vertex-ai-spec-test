/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Any;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes the dataset version.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-07T09:54:52.538010900+01:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GoogleCloudAiplatformV1DatasetVersion {
  public static final String SERIALIZED_NAME_SATISFIES_PZS = "satisfiesPzs";
  @SerializedName(SERIALIZED_NAME_SATISFIES_PZS)
  private Boolean satisfiesPzs;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_MODEL_REFERENCE = "modelReference";
  @SerializedName(SERIALIZED_NAME_MODEL_REFERENCE)
  private String modelReference;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Any metadata = null;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_BIG_QUERY_DATASET_NAME = "bigQueryDatasetName";
  @SerializedName(SERIALIZED_NAME_BIG_QUERY_DATASET_NAME)
  private String bigQueryDatasetName;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_SATISFIES_PZI = "satisfiesPzi";
  @SerializedName(SERIALIZED_NAME_SATISFIES_PZI)
  private Boolean satisfiesPzi;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public GoogleCloudAiplatformV1DatasetVersion() {
  }

  public GoogleCloudAiplatformV1DatasetVersion(
     Boolean satisfiesPzs, 
     String modelReference, 
     Any metadata, 
     String updateTime, 
     String bigQueryDatasetName, 
     Boolean satisfiesPzi, 
     String name, 
     String createTime
  ) {
    this();
    this.satisfiesPzs = satisfiesPzs;
    this.modelReference = modelReference;
    this.metadata = metadata;
    this.updateTime = updateTime;
    this.bigQueryDatasetName = bigQueryDatasetName;
    this.satisfiesPzi = satisfiesPzi;
    this.name = name;
    this.createTime = createTime;
  }

  /**
   * Output only. Reserved for future use.
   * @return satisfiesPzs
   */
  @javax.annotation.Nullable
  public Boolean getSatisfiesPzs() {
    return satisfiesPzs;
  }



  public GoogleCloudAiplatformV1DatasetVersion etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Used to perform consistent read-modify-write updates. If not set, a blind \&quot;overwrite\&quot; update happens.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  /**
   * Output only. Reference to the public base model last used by the dataset version. Only set for prompt dataset versions.
   * @return modelReference
   */
  @javax.annotation.Nullable
  public String getModelReference() {
    return modelReference;
  }



  /**
   * Required. Output only. Additional information about the DatasetVersion.
   * @return metadata
   */
  @javax.annotation.Nullable
  public Any getMetadata() {
    return metadata;
  }



  /**
   * Output only. Timestamp when this DatasetVersion was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  /**
   * Output only. Name of the associated BigQuery dataset.
   * @return bigQueryDatasetName
   */
  @javax.annotation.Nullable
  public String getBigQueryDatasetName() {
    return bigQueryDatasetName;
  }



  public GoogleCloudAiplatformV1DatasetVersion displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The user-defined name of the DatasetVersion. The name can be up to 128 characters long and can consist of any UTF-8 characters.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  /**
   * Output only. Reserved for future use.
   * @return satisfiesPzi
   */
  @javax.annotation.Nullable
  public Boolean getSatisfiesPzi() {
    return satisfiesPzi;
  }



  /**
   * Output only. Identifier. The resource name of the DatasetVersion.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. Timestamp when this DatasetVersion was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1DatasetVersion googleCloudAiplatformV1DatasetVersion = (GoogleCloudAiplatformV1DatasetVersion) o;
    return Objects.equals(this.satisfiesPzs, googleCloudAiplatformV1DatasetVersion.satisfiesPzs) &&
        Objects.equals(this.etag, googleCloudAiplatformV1DatasetVersion.etag) &&
        Objects.equals(this.modelReference, googleCloudAiplatformV1DatasetVersion.modelReference) &&
        Objects.equals(this.metadata, googleCloudAiplatformV1DatasetVersion.metadata) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1DatasetVersion.updateTime) &&
        Objects.equals(this.bigQueryDatasetName, googleCloudAiplatformV1DatasetVersion.bigQueryDatasetName) &&
        Objects.equals(this.displayName, googleCloudAiplatformV1DatasetVersion.displayName) &&
        Objects.equals(this.satisfiesPzi, googleCloudAiplatformV1DatasetVersion.satisfiesPzi) &&
        Objects.equals(this.name, googleCloudAiplatformV1DatasetVersion.name) &&
        Objects.equals(this.createTime, googleCloudAiplatformV1DatasetVersion.createTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(satisfiesPzs, etag, modelReference, metadata, updateTime, bigQueryDatasetName, displayName, satisfiesPzi, name, createTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1DatasetVersion {\n");
    sb.append("    satisfiesPzs: ").append(toIndentedString(satisfiesPzs)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    modelReference: ").append(toIndentedString(modelReference)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    bigQueryDatasetName: ").append(toIndentedString(bigQueryDatasetName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    satisfiesPzi: ").append(toIndentedString(satisfiesPzi)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("satisfiesPzs");
    openapiFields.add("etag");
    openapiFields.add("modelReference");
    openapiFields.add("metadata");
    openapiFields.add("updateTime");
    openapiFields.add("bigQueryDatasetName");
    openapiFields.add("displayName");
    openapiFields.add("satisfiesPzi");
    openapiFields.add("name");
    openapiFields.add("createTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1DatasetVersion
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1DatasetVersion.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1DatasetVersion is not found in the empty JSON string", GoogleCloudAiplatformV1DatasetVersion.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1DatasetVersion.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1DatasetVersion` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      if ((jsonObj.get("modelReference") != null && !jsonObj.get("modelReference").isJsonNull()) && !jsonObj.get("modelReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modelReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modelReference").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      if ((jsonObj.get("bigQueryDatasetName") != null && !jsonObj.get("bigQueryDatasetName").isJsonNull()) && !jsonObj.get("bigQueryDatasetName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bigQueryDatasetName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bigQueryDatasetName").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1DatasetVersion.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1DatasetVersion' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1DatasetVersion> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1DatasetVersion.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1DatasetVersion>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1DatasetVersion value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1DatasetVersion read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1DatasetVersion given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1DatasetVersion
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1DatasetVersion
   */
  public static GoogleCloudAiplatformV1DatasetVersion fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1DatasetVersion.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1DatasetVersion to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

