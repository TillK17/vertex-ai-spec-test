/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1EncryptionSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource;
import org.openapitools.client.model.GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource;
import org.openapitools.client.model.GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NotebookExecutionJob represents an instance of a notebook execution.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-07T09:54:52.538010900+01:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GoogleCloudAiplatformV1NotebookExecutionJob {
  public static final String SERIALIZED_NAME_SCHEDULE_RESOURCE_NAME = "scheduleResourceName";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_RESOURCE_NAME)
  private String scheduleResourceName;

  public static final String SERIALIZED_NAME_EXECUTION_TIMEOUT = "executionTimeout";
  @SerializedName(SERIALIZED_NAME_EXECUTION_TIMEOUT)
  private String executionTimeout;

  public static final String SERIALIZED_NAME_NOTEBOOK_RUNTIME_TEMPLATE_RESOURCE_NAME = "notebookRuntimeTemplateResourceName";
  @SerializedName(SERIALIZED_NAME_NOTEBOOK_RUNTIME_TEMPLATE_RESOURCE_NAME)
  private String notebookRuntimeTemplateResourceName;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_DIRECT_NOTEBOOK_SOURCE = "directNotebookSource";
  @SerializedName(SERIALIZED_NAME_DIRECT_NOTEBOOK_SOURCE)
  private GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource directNotebookSource;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT = "serviceAccount";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT)
  private String serviceAccount;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private GoogleRpcStatus status;

  /**
   * Output only. The state of the NotebookExecutionJob.
   */
  @JsonAdapter(JobStateEnum.Adapter.class)
  public enum JobStateEnum {
    UNSPECIFIED("JOB_STATE_UNSPECIFIED"),
    
    QUEUED("JOB_STATE_QUEUED"),
    
    PENDING("JOB_STATE_PENDING"),
    
    RUNNING("JOB_STATE_RUNNING"),
    
    SUCCEEDED("JOB_STATE_SUCCEEDED"),
    
    FAILED("JOB_STATE_FAILED"),
    
    CANCELLING("JOB_STATE_CANCELLING"),
    
    CANCELLED("JOB_STATE_CANCELLED"),
    
    PAUSED("JOB_STATE_PAUSED"),
    
    EXPIRED("JOB_STATE_EXPIRED"),
    
    UPDATING("JOB_STATE_UPDATING"),
    
    PARTIALLY_SUCCEEDED("JOB_STATE_PARTIALLY_SUCCEEDED");

    private String value;

    JobStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static JobStateEnum fromValue(String value) {
      for (JobStateEnum b : JobStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<JobStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JobStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return JobStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      JobStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_JOB_STATE = "jobState";
  @SerializedName(SERIALIZED_NAME_JOB_STATE)
  private JobStateEnum jobState;

  public static final String SERIALIZED_NAME_GCS_NOTEBOOK_SOURCE = "gcsNotebookSource";
  @SerializedName(SERIALIZED_NAME_GCS_NOTEBOOK_SOURCE)
  private GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource gcsNotebookSource;

  public static final String SERIALIZED_NAME_EXECUTION_USER = "executionUser";
  @SerializedName(SERIALIZED_NAME_EXECUTION_USER)
  private String executionUser;

  public static final String SERIALIZED_NAME_GCS_OUTPUT_URI = "gcsOutputUri";
  @SerializedName(SERIALIZED_NAME_GCS_OUTPUT_URI)
  private String gcsOutputUri;

  public static final String SERIALIZED_NAME_ENCRYPTION_SPEC = "encryptionSpec";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_SPEC)
  private GoogleCloudAiplatformV1EncryptionSpec encryptionSpec;

  public static final String SERIALIZED_NAME_DATAFORM_REPOSITORY_SOURCE = "dataformRepositorySource";
  @SerializedName(SERIALIZED_NAME_DATAFORM_REPOSITORY_SOURCE)
  private GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource dataformRepositorySource;

  public GoogleCloudAiplatformV1NotebookExecutionJob() {
  }

  public GoogleCloudAiplatformV1NotebookExecutionJob(
     String scheduleResourceName, 
     String createTime, 
     String name, 
     String updateTime, 
     GoogleRpcStatus status, 
     JobStateEnum jobState
  ) {
    this();
    this.scheduleResourceName = scheduleResourceName;
    this.createTime = createTime;
    this.name = name;
    this.updateTime = updateTime;
    this.status = status;
    this.jobState = jobState;
  }

  /**
   * Output only. The Schedule resource name if this job is triggered by one. Format: &#x60;projects/{project_id}/locations/{location}/schedules/{schedule_id}&#x60;
   * @return scheduleResourceName
   */
  @javax.annotation.Nullable
  public String getScheduleResourceName() {
    return scheduleResourceName;
  }



  public GoogleCloudAiplatformV1NotebookExecutionJob executionTimeout(String executionTimeout) {
    this.executionTimeout = executionTimeout;
    return this;
  }

  /**
   * Max running time of the execution job in seconds (default 86400s / 24 hrs).
   * @return executionTimeout
   */
  @javax.annotation.Nullable
  public String getExecutionTimeout() {
    return executionTimeout;
  }

  public void setExecutionTimeout(String executionTimeout) {
    this.executionTimeout = executionTimeout;
  }


  public GoogleCloudAiplatformV1NotebookExecutionJob notebookRuntimeTemplateResourceName(String notebookRuntimeTemplateResourceName) {
    this.notebookRuntimeTemplateResourceName = notebookRuntimeTemplateResourceName;
    return this;
  }

  /**
   * The NotebookRuntimeTemplate to source compute configuration from.
   * @return notebookRuntimeTemplateResourceName
   */
  @javax.annotation.Nullable
  public String getNotebookRuntimeTemplateResourceName() {
    return notebookRuntimeTemplateResourceName;
  }

  public void setNotebookRuntimeTemplateResourceName(String notebookRuntimeTemplateResourceName) {
    this.notebookRuntimeTemplateResourceName = notebookRuntimeTemplateResourceName;
  }


  /**
   * Output only. Timestamp when this NotebookExecutionJob was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudAiplatformV1NotebookExecutionJob labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudAiplatformV1NotebookExecutionJob putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * The labels with user-defined metadata to organize NotebookExecutionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \&quot;aiplatform.googleapis.com/\&quot; and are immutable.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudAiplatformV1NotebookExecutionJob directNotebookSource(GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource directNotebookSource) {
    this.directNotebookSource = directNotebookSource;
    return this;
  }

  /**
   * The contents of an input notebook file.
   * @return directNotebookSource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource getDirectNotebookSource() {
    return directNotebookSource;
  }

  public void setDirectNotebookSource(GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource directNotebookSource) {
    this.directNotebookSource = directNotebookSource;
  }


  /**
   * Output only. The resource name of this NotebookExecutionJob. Format: &#x60;projects/{project_id}/locations/{location}/notebookExecutionJobs/{job_id}&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudAiplatformV1NotebookExecutionJob displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of the NotebookExecutionJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  /**
   * Output only. Timestamp when this NotebookExecutionJob was most recently updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  public GoogleCloudAiplatformV1NotebookExecutionJob serviceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * The service account to run the execution as.
   * @return serviceAccount
   */
  @javax.annotation.Nullable
  public String getServiceAccount() {
    return serviceAccount;
  }

  public void setServiceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
  }


  /**
   * Output only. Populated when the NotebookExecutionJob is completed. When there is an error during notebook execution, the error details are populated.
   * @return status
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getStatus() {
    return status;
  }



  /**
   * Output only. The state of the NotebookExecutionJob.
   * @return jobState
   */
  @javax.annotation.Nullable
  public JobStateEnum getJobState() {
    return jobState;
  }



  public GoogleCloudAiplatformV1NotebookExecutionJob gcsNotebookSource(GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource gcsNotebookSource) {
    this.gcsNotebookSource = gcsNotebookSource;
    return this;
  }

  /**
   * The Cloud Storage url pointing to the ipynb file. Format: &#x60;gs://bucket/notebook_file.ipynb&#x60;
   * @return gcsNotebookSource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource getGcsNotebookSource() {
    return gcsNotebookSource;
  }

  public void setGcsNotebookSource(GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource gcsNotebookSource) {
    this.gcsNotebookSource = gcsNotebookSource;
  }


  public GoogleCloudAiplatformV1NotebookExecutionJob executionUser(String executionUser) {
    this.executionUser = executionUser;
    return this;
  }

  /**
   * The user email to run the execution as. Only supported by Colab runtimes.
   * @return executionUser
   */
  @javax.annotation.Nullable
  public String getExecutionUser() {
    return executionUser;
  }

  public void setExecutionUser(String executionUser) {
    this.executionUser = executionUser;
  }


  public GoogleCloudAiplatformV1NotebookExecutionJob gcsOutputUri(String gcsOutputUri) {
    this.gcsOutputUri = gcsOutputUri;
    return this;
  }

  /**
   * The Cloud Storage location to upload the result to. Format: &#x60;gs://bucket-name&#x60;
   * @return gcsOutputUri
   */
  @javax.annotation.Nullable
  public String getGcsOutputUri() {
    return gcsOutputUri;
  }

  public void setGcsOutputUri(String gcsOutputUri) {
    this.gcsOutputUri = gcsOutputUri;
  }


  public GoogleCloudAiplatformV1NotebookExecutionJob encryptionSpec(GoogleCloudAiplatformV1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
    return this;
  }

  /**
   * Customer-managed encryption key spec for the notebook execution job. This field is auto-populated if the NotebookService.NotebookRuntimeTemplate has an encryption spec.
   * @return encryptionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1EncryptionSpec getEncryptionSpec() {
    return encryptionSpec;
  }

  public void setEncryptionSpec(GoogleCloudAiplatformV1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
  }


  public GoogleCloudAiplatformV1NotebookExecutionJob dataformRepositorySource(GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource dataformRepositorySource) {
    this.dataformRepositorySource = dataformRepositorySource;
    return this;
  }

  /**
   * The Dataform Repository pointing to a single file notebook repository.
   * @return dataformRepositorySource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource getDataformRepositorySource() {
    return dataformRepositorySource;
  }

  public void setDataformRepositorySource(GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource dataformRepositorySource) {
    this.dataformRepositorySource = dataformRepositorySource;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1NotebookExecutionJob googleCloudAiplatformV1NotebookExecutionJob = (GoogleCloudAiplatformV1NotebookExecutionJob) o;
    return Objects.equals(this.scheduleResourceName, googleCloudAiplatformV1NotebookExecutionJob.scheduleResourceName) &&
        Objects.equals(this.executionTimeout, googleCloudAiplatformV1NotebookExecutionJob.executionTimeout) &&
        Objects.equals(this.notebookRuntimeTemplateResourceName, googleCloudAiplatformV1NotebookExecutionJob.notebookRuntimeTemplateResourceName) &&
        Objects.equals(this.createTime, googleCloudAiplatformV1NotebookExecutionJob.createTime) &&
        Objects.equals(this.labels, googleCloudAiplatformV1NotebookExecutionJob.labels) &&
        Objects.equals(this.directNotebookSource, googleCloudAiplatformV1NotebookExecutionJob.directNotebookSource) &&
        Objects.equals(this.name, googleCloudAiplatformV1NotebookExecutionJob.name) &&
        Objects.equals(this.displayName, googleCloudAiplatformV1NotebookExecutionJob.displayName) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1NotebookExecutionJob.updateTime) &&
        Objects.equals(this.serviceAccount, googleCloudAiplatformV1NotebookExecutionJob.serviceAccount) &&
        Objects.equals(this.status, googleCloudAiplatformV1NotebookExecutionJob.status) &&
        Objects.equals(this.jobState, googleCloudAiplatformV1NotebookExecutionJob.jobState) &&
        Objects.equals(this.gcsNotebookSource, googleCloudAiplatformV1NotebookExecutionJob.gcsNotebookSource) &&
        Objects.equals(this.executionUser, googleCloudAiplatformV1NotebookExecutionJob.executionUser) &&
        Objects.equals(this.gcsOutputUri, googleCloudAiplatformV1NotebookExecutionJob.gcsOutputUri) &&
        Objects.equals(this.encryptionSpec, googleCloudAiplatformV1NotebookExecutionJob.encryptionSpec) &&
        Objects.equals(this.dataformRepositorySource, googleCloudAiplatformV1NotebookExecutionJob.dataformRepositorySource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scheduleResourceName, executionTimeout, notebookRuntimeTemplateResourceName, createTime, labels, directNotebookSource, name, displayName, updateTime, serviceAccount, status, jobState, gcsNotebookSource, executionUser, gcsOutputUri, encryptionSpec, dataformRepositorySource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1NotebookExecutionJob {\n");
    sb.append("    scheduleResourceName: ").append(toIndentedString(scheduleResourceName)).append("\n");
    sb.append("    executionTimeout: ").append(toIndentedString(executionTimeout)).append("\n");
    sb.append("    notebookRuntimeTemplateResourceName: ").append(toIndentedString(notebookRuntimeTemplateResourceName)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    directNotebookSource: ").append(toIndentedString(directNotebookSource)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    serviceAccount: ").append(toIndentedString(serviceAccount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    jobState: ").append(toIndentedString(jobState)).append("\n");
    sb.append("    gcsNotebookSource: ").append(toIndentedString(gcsNotebookSource)).append("\n");
    sb.append("    executionUser: ").append(toIndentedString(executionUser)).append("\n");
    sb.append("    gcsOutputUri: ").append(toIndentedString(gcsOutputUri)).append("\n");
    sb.append("    encryptionSpec: ").append(toIndentedString(encryptionSpec)).append("\n");
    sb.append("    dataformRepositorySource: ").append(toIndentedString(dataformRepositorySource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("scheduleResourceName");
    openapiFields.add("executionTimeout");
    openapiFields.add("notebookRuntimeTemplateResourceName");
    openapiFields.add("createTime");
    openapiFields.add("labels");
    openapiFields.add("directNotebookSource");
    openapiFields.add("name");
    openapiFields.add("displayName");
    openapiFields.add("updateTime");
    openapiFields.add("serviceAccount");
    openapiFields.add("status");
    openapiFields.add("jobState");
    openapiFields.add("gcsNotebookSource");
    openapiFields.add("executionUser");
    openapiFields.add("gcsOutputUri");
    openapiFields.add("encryptionSpec");
    openapiFields.add("dataformRepositorySource");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1NotebookExecutionJob
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1NotebookExecutionJob.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1NotebookExecutionJob is not found in the empty JSON string", GoogleCloudAiplatformV1NotebookExecutionJob.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1NotebookExecutionJob.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1NotebookExecutionJob` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("scheduleResourceName") != null && !jsonObj.get("scheduleResourceName").isJsonNull()) && !jsonObj.get("scheduleResourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scheduleResourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scheduleResourceName").toString()));
      }
      if ((jsonObj.get("executionTimeout") != null && !jsonObj.get("executionTimeout").isJsonNull()) && !jsonObj.get("executionTimeout").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `executionTimeout` to be a primitive type in the JSON string but got `%s`", jsonObj.get("executionTimeout").toString()));
      }
      if ((jsonObj.get("notebookRuntimeTemplateResourceName") != null && !jsonObj.get("notebookRuntimeTemplateResourceName").isJsonNull()) && !jsonObj.get("notebookRuntimeTemplateResourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notebookRuntimeTemplateResourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notebookRuntimeTemplateResourceName").toString()));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `directNotebookSource`
      if (jsonObj.get("directNotebookSource") != null && !jsonObj.get("directNotebookSource").isJsonNull()) {
        GoogleCloudAiplatformV1NotebookExecutionJobDirectNotebookSource.validateJsonElement(jsonObj.get("directNotebookSource"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      if ((jsonObj.get("serviceAccount") != null && !jsonObj.get("serviceAccount").isJsonNull()) && !jsonObj.get("serviceAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccount").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("jobState") != null && !jsonObj.get("jobState").isJsonNull()) && !jsonObj.get("jobState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobState").toString()));
      }
      // validate the optional field `jobState`
      if (jsonObj.get("jobState") != null && !jsonObj.get("jobState").isJsonNull()) {
        JobStateEnum.validateJsonElement(jsonObj.get("jobState"));
      }
      // validate the optional field `gcsNotebookSource`
      if (jsonObj.get("gcsNotebookSource") != null && !jsonObj.get("gcsNotebookSource").isJsonNull()) {
        GoogleCloudAiplatformV1NotebookExecutionJobGcsNotebookSource.validateJsonElement(jsonObj.get("gcsNotebookSource"));
      }
      if ((jsonObj.get("executionUser") != null && !jsonObj.get("executionUser").isJsonNull()) && !jsonObj.get("executionUser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `executionUser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("executionUser").toString()));
      }
      if ((jsonObj.get("gcsOutputUri") != null && !jsonObj.get("gcsOutputUri").isJsonNull()) && !jsonObj.get("gcsOutputUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gcsOutputUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gcsOutputUri").toString()));
      }
      // validate the optional field `encryptionSpec`
      if (jsonObj.get("encryptionSpec") != null && !jsonObj.get("encryptionSpec").isJsonNull()) {
        GoogleCloudAiplatformV1EncryptionSpec.validateJsonElement(jsonObj.get("encryptionSpec"));
      }
      // validate the optional field `dataformRepositorySource`
      if (jsonObj.get("dataformRepositorySource") != null && !jsonObj.get("dataformRepositorySource").isJsonNull()) {
        GoogleCloudAiplatformV1NotebookExecutionJobDataformRepositorySource.validateJsonElement(jsonObj.get("dataformRepositorySource"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1NotebookExecutionJob.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1NotebookExecutionJob' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1NotebookExecutionJob> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1NotebookExecutionJob.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1NotebookExecutionJob>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1NotebookExecutionJob value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1NotebookExecutionJob read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1NotebookExecutionJob given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1NotebookExecutionJob
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1NotebookExecutionJob
   */
  public static GoogleCloudAiplatformV1NotebookExecutionJob fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1NotebookExecutionJob.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1NotebookExecutionJob to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

