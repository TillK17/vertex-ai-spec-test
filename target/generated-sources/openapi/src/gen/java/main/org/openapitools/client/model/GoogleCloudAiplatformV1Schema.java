/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.Any;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Schema is used to define the format of input/output data. Represents a select subset of an [OpenAPI 3.0 schema object](https://spec.openapis.org/oas/v3.0.3#schema-object). More fields may be added in the future as needed.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-07T10:15:10.793031100+01:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GoogleCloudAiplatformV1Schema {
  public static final String SERIALIZED_NAME_DEFAULT = "default";
  @SerializedName(SERIALIZED_NAME_DEFAULT)
  private Any _default = null;

  public static final String SERIALIZED_NAME_ENUM = "enum";
  @SerializedName(SERIALIZED_NAME_ENUM)
  private List<String> _enum = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROPERTY_ORDERING = "propertyOrdering";
  @SerializedName(SERIALIZED_NAME_PROPERTY_ORDERING)
  private List<String> propertyOrdering = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAXIMUM = "maximum";
  @SerializedName(SERIALIZED_NAME_MAXIMUM)
  private Double maximum;

  public static final String SERIALIZED_NAME_MIN_PROPERTIES = "minProperties";
  @SerializedName(SERIALIZED_NAME_MIN_PROPERTIES)
  private String minProperties;

  /**
   * Optional. The type of the data.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    TYPE_UNSPECIFIED("TYPE_UNSPECIFIED"),
    
    STRING("STRING"),
    
    NUMBER("NUMBER"),
    
    INTEGER("INTEGER"),
    
    BOOLEAN("BOOLEAN"),
    
    ARRAY("ARRAY"),
    
    OBJECT("OBJECT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_NULLABLE = "nullable";
  @SerializedName(SERIALIZED_NAME_NULLABLE)
  private Boolean nullable;

  public static final String SERIALIZED_NAME_MAX_ITEMS = "maxItems";
  @SerializedName(SERIALIZED_NAME_MAX_ITEMS)
  private String maxItems;

  public static final String SERIALIZED_NAME_EXAMPLE = "example";
  @SerializedName(SERIALIZED_NAME_EXAMPLE)
  private Any example = null;

  public static final String SERIALIZED_NAME_MIN_LENGTH = "minLength";
  @SerializedName(SERIALIZED_NAME_MIN_LENGTH)
  private String minLength;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private List<String> required = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private Map<String, GoogleCloudAiplatformV1Schema> properties = new HashMap<>();

  public static final String SERIALIZED_NAME_MINIMUM = "minimum";
  @SerializedName(SERIALIZED_NAME_MINIMUM)
  private Double minimum;

  public static final String SERIALIZED_NAME_MAX_LENGTH = "maxLength";
  @SerializedName(SERIALIZED_NAME_MAX_LENGTH)
  private String maxLength;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private GoogleCloudAiplatformV1Schema items;

  public static final String SERIALIZED_NAME_MIN_ITEMS = "minItems";
  @SerializedName(SERIALIZED_NAME_MIN_ITEMS)
  private String minItems;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_MAX_PROPERTIES = "maxProperties";
  @SerializedName(SERIALIZED_NAME_MAX_PROPERTIES)
  private String maxProperties;

  public static final String SERIALIZED_NAME_PATTERN = "pattern";
  @SerializedName(SERIALIZED_NAME_PATTERN)
  private String pattern;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public GoogleCloudAiplatformV1Schema() {
  }

  public GoogleCloudAiplatformV1Schema _default(Any _default) {
    this._default = _default;
    return this;
  }

  /**
   * Optional. Default value of the data.
   * @return _default
   */
  @javax.annotation.Nullable
  public Any getDefault() {
    return _default;
  }

  public void setDefault(Any _default) {
    this._default = _default;
  }


  public GoogleCloudAiplatformV1Schema _enum(List<String> _enum) {
    this._enum = _enum;
    return this;
  }

  public GoogleCloudAiplatformV1Schema addEnumItem(String _enumItem) {
    if (this._enum == null) {
      this._enum = new ArrayList<>();
    }
    this._enum.add(_enumItem);
    return this;
  }

  /**
   * Optional. Possible values of the element of Type.STRING with enum format. For example we can define an Enum Direction as : {type:STRING, format:enum, enum:[\&quot;EAST\&quot;, NORTH\&quot;, \&quot;SOUTH\&quot;, \&quot;WEST\&quot;]}
   * @return _enum
   */
  @javax.annotation.Nullable
  public List<String> getEnum() {
    return _enum;
  }

  public void setEnum(List<String> _enum) {
    this._enum = _enum;
  }


  public GoogleCloudAiplatformV1Schema propertyOrdering(List<String> propertyOrdering) {
    this.propertyOrdering = propertyOrdering;
    return this;
  }

  public GoogleCloudAiplatformV1Schema addPropertyOrderingItem(String propertyOrderingItem) {
    if (this.propertyOrdering == null) {
      this.propertyOrdering = new ArrayList<>();
    }
    this.propertyOrdering.add(propertyOrderingItem);
    return this;
  }

  /**
   * Optional. The order of the properties. Not a standard field in open api spec. Only used to support the order of the properties.
   * @return propertyOrdering
   */
  @javax.annotation.Nullable
  public List<String> getPropertyOrdering() {
    return propertyOrdering;
  }

  public void setPropertyOrdering(List<String> propertyOrdering) {
    this.propertyOrdering = propertyOrdering;
  }


  public GoogleCloudAiplatformV1Schema maximum(Double maximum) {
    this.maximum = maximum;
    return this;
  }

  /**
   * Optional. Maximum value of the Type.INTEGER and Type.NUMBER
   * @return maximum
   */
  @javax.annotation.Nullable
  public Double getMaximum() {
    return maximum;
  }

  public void setMaximum(Double maximum) {
    this.maximum = maximum;
  }


  public GoogleCloudAiplatformV1Schema minProperties(String minProperties) {
    this.minProperties = minProperties;
    return this;
  }

  /**
   * Optional. Minimum number of the properties for Type.OBJECT.
   * @return minProperties
   */
  @javax.annotation.Nullable
  public String getMinProperties() {
    return minProperties;
  }

  public void setMinProperties(String minProperties) {
    this.minProperties = minProperties;
  }


  public GoogleCloudAiplatformV1Schema type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Optional. The type of the data.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  public GoogleCloudAiplatformV1Schema nullable(Boolean nullable) {
    this.nullable = nullable;
    return this;
  }

  /**
   * Optional. Indicates if the value may be null.
   * @return nullable
   */
  @javax.annotation.Nullable
  public Boolean getNullable() {
    return nullable;
  }

  public void setNullable(Boolean nullable) {
    this.nullable = nullable;
  }


  public GoogleCloudAiplatformV1Schema maxItems(String maxItems) {
    this.maxItems = maxItems;
    return this;
  }

  /**
   * Optional. Maximum number of the elements for Type.ARRAY.
   * @return maxItems
   */
  @javax.annotation.Nullable
  public String getMaxItems() {
    return maxItems;
  }

  public void setMaxItems(String maxItems) {
    this.maxItems = maxItems;
  }


  public GoogleCloudAiplatformV1Schema example(Any example) {
    this.example = example;
    return this;
  }

  /**
   * Optional. Example of the object. Will only populated when the object is the root.
   * @return example
   */
  @javax.annotation.Nullable
  public Any getExample() {
    return example;
  }

  public void setExample(Any example) {
    this.example = example;
  }


  public GoogleCloudAiplatformV1Schema minLength(String minLength) {
    this.minLength = minLength;
    return this;
  }

  /**
   * Optional. SCHEMA FIELDS FOR TYPE STRING Minimum length of the Type.STRING
   * @return minLength
   */
  @javax.annotation.Nullable
  public String getMinLength() {
    return minLength;
  }

  public void setMinLength(String minLength) {
    this.minLength = minLength;
  }


  public GoogleCloudAiplatformV1Schema required(List<String> required) {
    this.required = required;
    return this;
  }

  public GoogleCloudAiplatformV1Schema addRequiredItem(String requiredItem) {
    if (this.required == null) {
      this.required = new ArrayList<>();
    }
    this.required.add(requiredItem);
    return this;
  }

  /**
   * Optional. Required properties of Type.OBJECT.
   * @return required
   */
  @javax.annotation.Nullable
  public List<String> getRequired() {
    return required;
  }

  public void setRequired(List<String> required) {
    this.required = required;
  }


  public GoogleCloudAiplatformV1Schema properties(Map<String, GoogleCloudAiplatformV1Schema> properties) {
    this.properties = properties;
    return this;
  }

  public GoogleCloudAiplatformV1Schema putPropertiesItem(String key, GoogleCloudAiplatformV1Schema propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

  /**
   * Optional. SCHEMA FIELDS FOR TYPE OBJECT Properties of Type.OBJECT.
   * @return properties
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudAiplatformV1Schema> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, GoogleCloudAiplatformV1Schema> properties) {
    this.properties = properties;
  }


  public GoogleCloudAiplatformV1Schema minimum(Double minimum) {
    this.minimum = minimum;
    return this;
  }

  /**
   * Optional. SCHEMA FIELDS FOR TYPE INTEGER and NUMBER Minimum value of the Type.INTEGER and Type.NUMBER
   * @return minimum
   */
  @javax.annotation.Nullable
  public Double getMinimum() {
    return minimum;
  }

  public void setMinimum(Double minimum) {
    this.minimum = minimum;
  }


  public GoogleCloudAiplatformV1Schema maxLength(String maxLength) {
    this.maxLength = maxLength;
    return this;
  }

  /**
   * Optional. Maximum length of the Type.STRING
   * @return maxLength
   */
  @javax.annotation.Nullable
  public String getMaxLength() {
    return maxLength;
  }

  public void setMaxLength(String maxLength) {
    this.maxLength = maxLength;
  }


  public GoogleCloudAiplatformV1Schema title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Optional. The title of the Schema.
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public GoogleCloudAiplatformV1Schema items(GoogleCloudAiplatformV1Schema items) {
    this.items = items;
    return this;
  }

  /**
   * Optional. SCHEMA FIELDS FOR TYPE ARRAY Schema of the elements of Type.ARRAY.
   * @return items
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1Schema getItems() {
    return items;
  }

  public void setItems(GoogleCloudAiplatformV1Schema items) {
    this.items = items;
  }


  public GoogleCloudAiplatformV1Schema minItems(String minItems) {
    this.minItems = minItems;
    return this;
  }

  /**
   * Optional. Minimum number of the elements for Type.ARRAY.
   * @return minItems
   */
  @javax.annotation.Nullable
  public String getMinItems() {
    return minItems;
  }

  public void setMinItems(String minItems) {
    this.minItems = minItems;
  }


  public GoogleCloudAiplatformV1Schema format(String format) {
    this.format = format;
    return this;
  }

  /**
   * Optional. The format of the data. Supported formats: for NUMBER type: \&quot;float\&quot;, \&quot;double\&quot; for INTEGER type: \&quot;int32\&quot;, \&quot;int64\&quot; for STRING type: \&quot;email\&quot;, \&quot;byte\&quot;, etc
   * @return format
   */
  @javax.annotation.Nullable
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }


  public GoogleCloudAiplatformV1Schema maxProperties(String maxProperties) {
    this.maxProperties = maxProperties;
    return this;
  }

  /**
   * Optional. Maximum number of the properties for Type.OBJECT.
   * @return maxProperties
   */
  @javax.annotation.Nullable
  public String getMaxProperties() {
    return maxProperties;
  }

  public void setMaxProperties(String maxProperties) {
    this.maxProperties = maxProperties;
  }


  public GoogleCloudAiplatformV1Schema pattern(String pattern) {
    this.pattern = pattern;
    return this;
  }

  /**
   * Optional. Pattern of the Type.STRING to restrict a string to a regular expression.
   * @return pattern
   */
  @javax.annotation.Nullable
  public String getPattern() {
    return pattern;
  }

  public void setPattern(String pattern) {
    this.pattern = pattern;
  }


  public GoogleCloudAiplatformV1Schema description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. The description of the data.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1Schema googleCloudAiplatformV1Schema = (GoogleCloudAiplatformV1Schema) o;
    return Objects.equals(this._default, googleCloudAiplatformV1Schema._default) &&
        Objects.equals(this._enum, googleCloudAiplatformV1Schema._enum) &&
        Objects.equals(this.propertyOrdering, googleCloudAiplatformV1Schema.propertyOrdering) &&
        Objects.equals(this.maximum, googleCloudAiplatformV1Schema.maximum) &&
        Objects.equals(this.minProperties, googleCloudAiplatformV1Schema.minProperties) &&
        Objects.equals(this.type, googleCloudAiplatformV1Schema.type) &&
        Objects.equals(this.nullable, googleCloudAiplatformV1Schema.nullable) &&
        Objects.equals(this.maxItems, googleCloudAiplatformV1Schema.maxItems) &&
        Objects.equals(this.example, googleCloudAiplatformV1Schema.example) &&
        Objects.equals(this.minLength, googleCloudAiplatformV1Schema.minLength) &&
        Objects.equals(this.required, googleCloudAiplatformV1Schema.required) &&
        Objects.equals(this.properties, googleCloudAiplatformV1Schema.properties) &&
        Objects.equals(this.minimum, googleCloudAiplatformV1Schema.minimum) &&
        Objects.equals(this.maxLength, googleCloudAiplatformV1Schema.maxLength) &&
        Objects.equals(this.title, googleCloudAiplatformV1Schema.title) &&
        Objects.equals(this.items, googleCloudAiplatformV1Schema.items) &&
        Objects.equals(this.minItems, googleCloudAiplatformV1Schema.minItems) &&
        Objects.equals(this.format, googleCloudAiplatformV1Schema.format) &&
        Objects.equals(this.maxProperties, googleCloudAiplatformV1Schema.maxProperties) &&
        Objects.equals(this.pattern, googleCloudAiplatformV1Schema.pattern) &&
        Objects.equals(this.description, googleCloudAiplatformV1Schema.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_default, _enum, propertyOrdering, maximum, minProperties, type, nullable, maxItems, example, minLength, required, properties, minimum, maxLength, title, items, minItems, format, maxProperties, pattern, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1Schema {\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    _enum: ").append(toIndentedString(_enum)).append("\n");
    sb.append("    propertyOrdering: ").append(toIndentedString(propertyOrdering)).append("\n");
    sb.append("    maximum: ").append(toIndentedString(maximum)).append("\n");
    sb.append("    minProperties: ").append(toIndentedString(minProperties)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    nullable: ").append(toIndentedString(nullable)).append("\n");
    sb.append("    maxItems: ").append(toIndentedString(maxItems)).append("\n");
    sb.append("    example: ").append(toIndentedString(example)).append("\n");
    sb.append("    minLength: ").append(toIndentedString(minLength)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    minItems: ").append(toIndentedString(minItems)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    maxProperties: ").append(toIndentedString(maxProperties)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("default");
    openapiFields.add("enum");
    openapiFields.add("propertyOrdering");
    openapiFields.add("maximum");
    openapiFields.add("minProperties");
    openapiFields.add("type");
    openapiFields.add("nullable");
    openapiFields.add("maxItems");
    openapiFields.add("example");
    openapiFields.add("minLength");
    openapiFields.add("required");
    openapiFields.add("properties");
    openapiFields.add("minimum");
    openapiFields.add("maxLength");
    openapiFields.add("title");
    openapiFields.add("items");
    openapiFields.add("minItems");
    openapiFields.add("format");
    openapiFields.add("maxProperties");
    openapiFields.add("pattern");
    openapiFields.add("description");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1Schema
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1Schema.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1Schema is not found in the empty JSON string", GoogleCloudAiplatformV1Schema.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1Schema.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1Schema` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("enum") != null && !jsonObj.get("enum").isJsonNull() && !jsonObj.get("enum").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `enum` to be an array in the JSON string but got `%s`", jsonObj.get("enum").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("propertyOrdering") != null && !jsonObj.get("propertyOrdering").isJsonNull() && !jsonObj.get("propertyOrdering").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `propertyOrdering` to be an array in the JSON string but got `%s`", jsonObj.get("propertyOrdering").toString()));
      }
      if ((jsonObj.get("minProperties") != null && !jsonObj.get("minProperties").isJsonNull()) && !jsonObj.get("minProperties").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minProperties` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minProperties").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      if ((jsonObj.get("maxItems") != null && !jsonObj.get("maxItems").isJsonNull()) && !jsonObj.get("maxItems").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxItems` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxItems").toString()));
      }
      if ((jsonObj.get("minLength") != null && !jsonObj.get("minLength").isJsonNull()) && !jsonObj.get("minLength").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minLength` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minLength").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("required") != null && !jsonObj.get("required").isJsonNull() && !jsonObj.get("required").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `required` to be an array in the JSON string but got `%s`", jsonObj.get("required").toString()));
      }
      if ((jsonObj.get("maxLength") != null && !jsonObj.get("maxLength").isJsonNull()) && !jsonObj.get("maxLength").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxLength` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxLength").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      // validate the optional field `items`
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        GoogleCloudAiplatformV1Schema.validateJsonElement(jsonObj.get("items"));
      }
      if ((jsonObj.get("minItems") != null && !jsonObj.get("minItems").isJsonNull()) && !jsonObj.get("minItems").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minItems` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minItems").toString()));
      }
      if ((jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      if ((jsonObj.get("maxProperties") != null && !jsonObj.get("maxProperties").isJsonNull()) && !jsonObj.get("maxProperties").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxProperties` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxProperties").toString()));
      }
      if ((jsonObj.get("pattern") != null && !jsonObj.get("pattern").isJsonNull()) && !jsonObj.get("pattern").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pattern` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pattern").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1Schema.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1Schema' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1Schema> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1Schema.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1Schema>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1Schema value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1Schema read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1Schema given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1Schema
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1Schema
   */
  public static GoogleCloudAiplatformV1Schema fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1Schema.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1Schema to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

