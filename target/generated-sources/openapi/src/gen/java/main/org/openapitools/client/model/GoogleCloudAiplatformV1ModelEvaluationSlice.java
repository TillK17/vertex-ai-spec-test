/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Any;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelEvaluationSliceSlice;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelExplanation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A collection of metrics calculated by comparing Model&#39;s predictions on a slice of the test data against ground truth annotations.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-07T09:54:52.538010900+01:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GoogleCloudAiplatformV1ModelEvaluationSlice {
  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private Any metrics = null;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_METRICS_SCHEMA_URI = "metricsSchemaUri";
  @SerializedName(SERIALIZED_NAME_METRICS_SCHEMA_URI)
  private String metricsSchemaUri;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_MODEL_EXPLANATION = "modelExplanation";
  @SerializedName(SERIALIZED_NAME_MODEL_EXPLANATION)
  private GoogleCloudAiplatformV1ModelExplanation modelExplanation;

  public static final String SERIALIZED_NAME_SLICE = "slice";
  @SerializedName(SERIALIZED_NAME_SLICE)
  private GoogleCloudAiplatformV1ModelEvaluationSliceSlice slice;

  public GoogleCloudAiplatformV1ModelEvaluationSlice() {
  }

  public GoogleCloudAiplatformV1ModelEvaluationSlice(
     Any metrics, 
     String createTime, 
     String metricsSchemaUri, 
     String name, 
     GoogleCloudAiplatformV1ModelExplanation modelExplanation, 
     GoogleCloudAiplatformV1ModelEvaluationSliceSlice slice
  ) {
    this();
    this.metrics = metrics;
    this.createTime = createTime;
    this.metricsSchemaUri = metricsSchemaUri;
    this.name = name;
    this.modelExplanation = modelExplanation;
    this.slice = slice;
  }

  /**
   * Output only. Sliced evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri
   * @return metrics
   */
  @javax.annotation.Nullable
  public Any getMetrics() {
    return metrics;
  }



  /**
   * Output only. Timestamp when this ModelEvaluationSlice was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluationSlice. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
   * @return metricsSchemaUri
   */
  @javax.annotation.Nullable
  public String getMetricsSchemaUri() {
    return metricsSchemaUri;
  }



  /**
   * Output only. The resource name of the ModelEvaluationSlice.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. Aggregated explanation metrics for the Model&#39;s prediction output over the data this ModelEvaluation uses. This field is populated only if the Model is evaluated with explanations, and only for tabular Models.
   * @return modelExplanation
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1ModelExplanation getModelExplanation() {
    return modelExplanation;
  }



  /**
   * Output only. The slice of the test data that is used to evaluate the Model.
   * @return slice
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1ModelEvaluationSliceSlice getSlice() {
    return slice;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1ModelEvaluationSlice googleCloudAiplatformV1ModelEvaluationSlice = (GoogleCloudAiplatformV1ModelEvaluationSlice) o;
    return Objects.equals(this.metrics, googleCloudAiplatformV1ModelEvaluationSlice.metrics) &&
        Objects.equals(this.createTime, googleCloudAiplatformV1ModelEvaluationSlice.createTime) &&
        Objects.equals(this.metricsSchemaUri, googleCloudAiplatformV1ModelEvaluationSlice.metricsSchemaUri) &&
        Objects.equals(this.name, googleCloudAiplatformV1ModelEvaluationSlice.name) &&
        Objects.equals(this.modelExplanation, googleCloudAiplatformV1ModelEvaluationSlice.modelExplanation) &&
        Objects.equals(this.slice, googleCloudAiplatformV1ModelEvaluationSlice.slice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metrics, createTime, metricsSchemaUri, name, modelExplanation, slice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1ModelEvaluationSlice {\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    metricsSchemaUri: ").append(toIndentedString(metricsSchemaUri)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    modelExplanation: ").append(toIndentedString(modelExplanation)).append("\n");
    sb.append("    slice: ").append(toIndentedString(slice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("metrics");
    openapiFields.add("createTime");
    openapiFields.add("metricsSchemaUri");
    openapiFields.add("name");
    openapiFields.add("modelExplanation");
    openapiFields.add("slice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1ModelEvaluationSlice
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1ModelEvaluationSlice.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1ModelEvaluationSlice is not found in the empty JSON string", GoogleCloudAiplatformV1ModelEvaluationSlice.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1ModelEvaluationSlice.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1ModelEvaluationSlice` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("metricsSchemaUri") != null && !jsonObj.get("metricsSchemaUri").isJsonNull()) && !jsonObj.get("metricsSchemaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metricsSchemaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metricsSchemaUri").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `modelExplanation`
      if (jsonObj.get("modelExplanation") != null && !jsonObj.get("modelExplanation").isJsonNull()) {
        GoogleCloudAiplatformV1ModelExplanation.validateJsonElement(jsonObj.get("modelExplanation"));
      }
      // validate the optional field `slice`
      if (jsonObj.get("slice") != null && !jsonObj.get("slice").isJsonNull()) {
        GoogleCloudAiplatformV1ModelEvaluationSliceSlice.validateJsonElement(jsonObj.get("slice"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1ModelEvaluationSlice.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1ModelEvaluationSlice' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1ModelEvaluationSlice> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1ModelEvaluationSlice.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1ModelEvaluationSlice>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1ModelEvaluationSlice value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1ModelEvaluationSlice read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1ModelEvaluationSlice given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1ModelEvaluationSlice
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1ModelEvaluationSlice
   */
  public static GoogleCloudAiplatformV1ModelEvaluationSlice fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1ModelEvaluationSlice.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1ModelEvaluationSlice to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

