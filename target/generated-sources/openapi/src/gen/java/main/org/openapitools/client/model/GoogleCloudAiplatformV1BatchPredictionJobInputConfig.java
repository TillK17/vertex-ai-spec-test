/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1BigQuerySource;
import org.openapitools.client.model.GoogleCloudAiplatformV1GcsSource;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configures the input to BatchPredictionJob. See Model.supported_input_storage_formats for Model&#39;s supported input formats, and how instances should be expressed via any of them.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-07T10:15:10.793031100+01:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GoogleCloudAiplatformV1BatchPredictionJobInputConfig {
  public static final String SERIALIZED_NAME_INSTANCES_FORMAT = "instancesFormat";
  @SerializedName(SERIALIZED_NAME_INSTANCES_FORMAT)
  private String instancesFormat;

  public static final String SERIALIZED_NAME_GCS_SOURCE = "gcsSource";
  @SerializedName(SERIALIZED_NAME_GCS_SOURCE)
  private GoogleCloudAiplatformV1GcsSource gcsSource;

  public static final String SERIALIZED_NAME_BIGQUERY_SOURCE = "bigquerySource";
  @SerializedName(SERIALIZED_NAME_BIGQUERY_SOURCE)
  private GoogleCloudAiplatformV1BigQuerySource bigquerySource;

  public GoogleCloudAiplatformV1BatchPredictionJobInputConfig() {
  }

  public GoogleCloudAiplatformV1BatchPredictionJobInputConfig instancesFormat(String instancesFormat) {
    this.instancesFormat = instancesFormat;
    return this;
  }

  /**
   * Required. The format in which instances are given, must be one of the Model&#39;s supported_input_storage_formats.
   * @return instancesFormat
   */
  @javax.annotation.Nullable
  public String getInstancesFormat() {
    return instancesFormat;
  }

  public void setInstancesFormat(String instancesFormat) {
    this.instancesFormat = instancesFormat;
  }


  public GoogleCloudAiplatformV1BatchPredictionJobInputConfig gcsSource(GoogleCloudAiplatformV1GcsSource gcsSource) {
    this.gcsSource = gcsSource;
    return this;
  }

  /**
   * The Cloud Storage location for the input instances.
   * @return gcsSource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1GcsSource getGcsSource() {
    return gcsSource;
  }

  public void setGcsSource(GoogleCloudAiplatformV1GcsSource gcsSource) {
    this.gcsSource = gcsSource;
  }


  public GoogleCloudAiplatformV1BatchPredictionJobInputConfig bigquerySource(GoogleCloudAiplatformV1BigQuerySource bigquerySource) {
    this.bigquerySource = bigquerySource;
    return this;
  }

  /**
   * The BigQuery location of the input table. The schema of the table should be in the format described by the given context OpenAPI Schema, if one is provided. The table may contain additional columns that are not described by the schema, and they will be ignored.
   * @return bigquerySource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1BigQuerySource getBigquerySource() {
    return bigquerySource;
  }

  public void setBigquerySource(GoogleCloudAiplatformV1BigQuerySource bigquerySource) {
    this.bigquerySource = bigquerySource;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1BatchPredictionJobInputConfig googleCloudAiplatformV1BatchPredictionJobInputConfig = (GoogleCloudAiplatformV1BatchPredictionJobInputConfig) o;
    return Objects.equals(this.instancesFormat, googleCloudAiplatformV1BatchPredictionJobInputConfig.instancesFormat) &&
        Objects.equals(this.gcsSource, googleCloudAiplatformV1BatchPredictionJobInputConfig.gcsSource) &&
        Objects.equals(this.bigquerySource, googleCloudAiplatformV1BatchPredictionJobInputConfig.bigquerySource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instancesFormat, gcsSource, bigquerySource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1BatchPredictionJobInputConfig {\n");
    sb.append("    instancesFormat: ").append(toIndentedString(instancesFormat)).append("\n");
    sb.append("    gcsSource: ").append(toIndentedString(gcsSource)).append("\n");
    sb.append("    bigquerySource: ").append(toIndentedString(bigquerySource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instancesFormat");
    openapiFields.add("gcsSource");
    openapiFields.add("bigquerySource");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1BatchPredictionJobInputConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1BatchPredictionJobInputConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1BatchPredictionJobInputConfig is not found in the empty JSON string", GoogleCloudAiplatformV1BatchPredictionJobInputConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1BatchPredictionJobInputConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1BatchPredictionJobInputConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("instancesFormat") != null && !jsonObj.get("instancesFormat").isJsonNull()) && !jsonObj.get("instancesFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instancesFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instancesFormat").toString()));
      }
      // validate the optional field `gcsSource`
      if (jsonObj.get("gcsSource") != null && !jsonObj.get("gcsSource").isJsonNull()) {
        GoogleCloudAiplatformV1GcsSource.validateJsonElement(jsonObj.get("gcsSource"));
      }
      // validate the optional field `bigquerySource`
      if (jsonObj.get("bigquerySource") != null && !jsonObj.get("bigquerySource").isJsonNull()) {
        GoogleCloudAiplatformV1BigQuerySource.validateJsonElement(jsonObj.get("bigquerySource"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1BatchPredictionJobInputConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1BatchPredictionJobInputConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1BatchPredictionJobInputConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1BatchPredictionJobInputConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1BatchPredictionJobInputConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1BatchPredictionJobInputConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1BatchPredictionJobInputConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1BatchPredictionJobInputConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1BatchPredictionJobInputConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1BatchPredictionJobInputConfig
   */
  public static GoogleCloudAiplatformV1BatchPredictionJobInputConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1BatchPredictionJobInputConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1BatchPredictionJobInputConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

