/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1NasTrial;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a NasTrial details along with its parameters. If there is a corresponding train NasTrial, the train NasTrial is also returned.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-07T10:15:10.793031100+01:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GoogleCloudAiplatformV1NasTrialDetail {
  public static final String SERIALIZED_NAME_TRAIN_TRIAL = "trainTrial";
  @SerializedName(SERIALIZED_NAME_TRAIN_TRIAL)
  private GoogleCloudAiplatformV1NasTrial trainTrial;

  public static final String SERIALIZED_NAME_SEARCH_TRIAL = "searchTrial";
  @SerializedName(SERIALIZED_NAME_SEARCH_TRIAL)
  private GoogleCloudAiplatformV1NasTrial searchTrial;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private String parameters;

  public GoogleCloudAiplatformV1NasTrialDetail() {
  }

  public GoogleCloudAiplatformV1NasTrialDetail(
     String name
  ) {
    this();
    this.name = name;
  }

  public GoogleCloudAiplatformV1NasTrialDetail trainTrial(GoogleCloudAiplatformV1NasTrial trainTrial) {
    this.trainTrial = trainTrial;
    return this;
  }

  /**
   * The train NasTrial corresponding to search_trial. Only populated if search_trial is used for training.
   * @return trainTrial
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1NasTrial getTrainTrial() {
    return trainTrial;
  }

  public void setTrainTrial(GoogleCloudAiplatformV1NasTrial trainTrial) {
    this.trainTrial = trainTrial;
  }


  public GoogleCloudAiplatformV1NasTrialDetail searchTrial(GoogleCloudAiplatformV1NasTrial searchTrial) {
    this.searchTrial = searchTrial;
    return this;
  }

  /**
   * The requested search NasTrial.
   * @return searchTrial
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1NasTrial getSearchTrial() {
    return searchTrial;
  }

  public void setSearchTrial(GoogleCloudAiplatformV1NasTrial searchTrial) {
    this.searchTrial = searchTrial;
  }


  /**
   * Output only. Resource name of the NasTrialDetail.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudAiplatformV1NasTrialDetail parameters(String parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * The parameters for the NasJob NasTrial.
   * @return parameters
   */
  @javax.annotation.Nullable
  public String getParameters() {
    return parameters;
  }

  public void setParameters(String parameters) {
    this.parameters = parameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1NasTrialDetail googleCloudAiplatformV1NasTrialDetail = (GoogleCloudAiplatformV1NasTrialDetail) o;
    return Objects.equals(this.trainTrial, googleCloudAiplatformV1NasTrialDetail.trainTrial) &&
        Objects.equals(this.searchTrial, googleCloudAiplatformV1NasTrialDetail.searchTrial) &&
        Objects.equals(this.name, googleCloudAiplatformV1NasTrialDetail.name) &&
        Objects.equals(this.parameters, googleCloudAiplatformV1NasTrialDetail.parameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(trainTrial, searchTrial, name, parameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1NasTrialDetail {\n");
    sb.append("    trainTrial: ").append(toIndentedString(trainTrial)).append("\n");
    sb.append("    searchTrial: ").append(toIndentedString(searchTrial)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("trainTrial");
    openapiFields.add("searchTrial");
    openapiFields.add("name");
    openapiFields.add("parameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1NasTrialDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1NasTrialDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1NasTrialDetail is not found in the empty JSON string", GoogleCloudAiplatformV1NasTrialDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1NasTrialDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1NasTrialDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `trainTrial`
      if (jsonObj.get("trainTrial") != null && !jsonObj.get("trainTrial").isJsonNull()) {
        GoogleCloudAiplatformV1NasTrial.validateJsonElement(jsonObj.get("trainTrial"));
      }
      // validate the optional field `searchTrial`
      if (jsonObj.get("searchTrial") != null && !jsonObj.get("searchTrial").isJsonNull()) {
        GoogleCloudAiplatformV1NasTrial.validateJsonElement(jsonObj.get("searchTrial"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("parameters") != null && !jsonObj.get("parameters").isJsonNull()) && !jsonObj.get("parameters").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parameters` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parameters").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1NasTrialDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1NasTrialDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1NasTrialDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1NasTrialDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1NasTrialDetail>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1NasTrialDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1NasTrialDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1NasTrialDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1NasTrialDetail
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1NasTrialDetail
   */
  public static GoogleCloudAiplatformV1NasTrialDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1NasTrialDetail.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1NasTrialDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

