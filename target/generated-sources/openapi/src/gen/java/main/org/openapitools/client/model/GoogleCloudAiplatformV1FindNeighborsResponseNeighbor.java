/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1IndexDatapoint;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A neighbor of the query vector.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-07T10:15:10.793031100+01:00[Europe/Berlin]", comments = "Generator version: 7.8.0")
public class GoogleCloudAiplatformV1FindNeighborsResponseNeighbor {
  public static final String SERIALIZED_NAME_DISTANCE = "distance";
  @SerializedName(SERIALIZED_NAME_DISTANCE)
  private Double distance;

  public static final String SERIALIZED_NAME_SPARSE_DISTANCE = "sparseDistance";
  @SerializedName(SERIALIZED_NAME_SPARSE_DISTANCE)
  private Double sparseDistance;

  public static final String SERIALIZED_NAME_DATAPOINT = "datapoint";
  @SerializedName(SERIALIZED_NAME_DATAPOINT)
  private GoogleCloudAiplatformV1IndexDatapoint datapoint;

  public GoogleCloudAiplatformV1FindNeighborsResponseNeighbor() {
  }

  public GoogleCloudAiplatformV1FindNeighborsResponseNeighbor distance(Double distance) {
    this.distance = distance;
    return this;
  }

  /**
   * The distance between the neighbor and the dense embedding query.
   * @return distance
   */
  @javax.annotation.Nullable
  public Double getDistance() {
    return distance;
  }

  public void setDistance(Double distance) {
    this.distance = distance;
  }


  public GoogleCloudAiplatformV1FindNeighborsResponseNeighbor sparseDistance(Double sparseDistance) {
    this.sparseDistance = sparseDistance;
    return this;
  }

  /**
   * The distance between the neighbor and the query sparse_embedding.
   * @return sparseDistance
   */
  @javax.annotation.Nullable
  public Double getSparseDistance() {
    return sparseDistance;
  }

  public void setSparseDistance(Double sparseDistance) {
    this.sparseDistance = sparseDistance;
  }


  public GoogleCloudAiplatformV1FindNeighborsResponseNeighbor datapoint(GoogleCloudAiplatformV1IndexDatapoint datapoint) {
    this.datapoint = datapoint;
    return this;
  }

  /**
   * The datapoint of the neighbor. Note that full datapoints are returned only when \&quot;return_full_datapoint\&quot; is set to true. Otherwise, only the \&quot;datapoint_id\&quot; and \&quot;crowding_tag\&quot; fields are populated.
   * @return datapoint
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1IndexDatapoint getDatapoint() {
    return datapoint;
  }

  public void setDatapoint(GoogleCloudAiplatformV1IndexDatapoint datapoint) {
    this.datapoint = datapoint;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1FindNeighborsResponseNeighbor googleCloudAiplatformV1FindNeighborsResponseNeighbor = (GoogleCloudAiplatformV1FindNeighborsResponseNeighbor) o;
    return Objects.equals(this.distance, googleCloudAiplatformV1FindNeighborsResponseNeighbor.distance) &&
        Objects.equals(this.sparseDistance, googleCloudAiplatformV1FindNeighborsResponseNeighbor.sparseDistance) &&
        Objects.equals(this.datapoint, googleCloudAiplatformV1FindNeighborsResponseNeighbor.datapoint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(distance, sparseDistance, datapoint);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1FindNeighborsResponseNeighbor {\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    sparseDistance: ").append(toIndentedString(sparseDistance)).append("\n");
    sb.append("    datapoint: ").append(toIndentedString(datapoint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("distance");
    openapiFields.add("sparseDistance");
    openapiFields.add("datapoint");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1FindNeighborsResponseNeighbor
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1FindNeighborsResponseNeighbor.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1FindNeighborsResponseNeighbor is not found in the empty JSON string", GoogleCloudAiplatformV1FindNeighborsResponseNeighbor.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1FindNeighborsResponseNeighbor.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1FindNeighborsResponseNeighbor` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `datapoint`
      if (jsonObj.get("datapoint") != null && !jsonObj.get("datapoint").isJsonNull()) {
        GoogleCloudAiplatformV1IndexDatapoint.validateJsonElement(jsonObj.get("datapoint"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1FindNeighborsResponseNeighbor.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1FindNeighborsResponseNeighbor' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1FindNeighborsResponseNeighbor> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1FindNeighborsResponseNeighbor.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1FindNeighborsResponseNeighbor>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1FindNeighborsResponseNeighbor value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1FindNeighborsResponseNeighbor read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1FindNeighborsResponseNeighbor given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1FindNeighborsResponseNeighbor
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1FindNeighborsResponseNeighbor
   */
  public static GoogleCloudAiplatformV1FindNeighborsResponseNeighbor fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1FindNeighborsResponseNeighbor.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1FindNeighborsResponseNeighbor to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

