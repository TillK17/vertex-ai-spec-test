/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1BleuInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1CoherenceInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1ExactMatchInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1FluencyInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1FulfillmentInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1GroundednessInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1PairwiseMetricInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1PairwiseSummarizationQualityInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1PointwiseMetricInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1QuestionAnsweringCorrectnessInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1QuestionAnsweringQualityInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1QuestionAnsweringRelevanceInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1RougeInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1SafetyInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1SummarizationHelpfulnessInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1SummarizationQualityInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1SummarizationVerbosityInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1ToolCallValidInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1ToolNameMatchInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1ToolParameterKVMatchInput;
import org.openapitools.client.model.GoogleCloudAiplatformV1ToolParameterKeyMatchInput;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudAiplatformV1EvaluateInstancesRequest
 */
public class GoogleCloudAiplatformV1EvaluateInstancesRequestTest {
    private final GoogleCloudAiplatformV1EvaluateInstancesRequest model = new GoogleCloudAiplatformV1EvaluateInstancesRequest();

    /**
     * Model tests for GoogleCloudAiplatformV1EvaluateInstancesRequest
     */
    @Test
    public void testGoogleCloudAiplatformV1EvaluateInstancesRequest() {
        // TODO: test GoogleCloudAiplatformV1EvaluateInstancesRequest
    }

    /**
     * Test the property 'summarizationVerbosityInput'
     */
    @Test
    public void summarizationVerbosityInputTest() {
        // TODO: test summarizationVerbosityInput
    }

    /**
     * Test the property 'pointwiseMetricInput'
     */
    @Test
    public void pointwiseMetricInputTest() {
        // TODO: test pointwiseMetricInput
    }

    /**
     * Test the property 'summarizationHelpfulnessInput'
     */
    @Test
    public void summarizationHelpfulnessInputTest() {
        // TODO: test summarizationHelpfulnessInput
    }

    /**
     * Test the property 'questionAnsweringHelpfulnessInput'
     */
    @Test
    public void questionAnsweringHelpfulnessInputTest() {
        // TODO: test questionAnsweringHelpfulnessInput
    }

    /**
     * Test the property 'toolNameMatchInput'
     */
    @Test
    public void toolNameMatchInputTest() {
        // TODO: test toolNameMatchInput
    }

    /**
     * Test the property 'pairwiseSummarizationQualityInput'
     */
    @Test
    public void pairwiseSummarizationQualityInputTest() {
        // TODO: test pairwiseSummarizationQualityInput
    }

    /**
     * Test the property 'toolParameterKvMatchInput'
     */
    @Test
    public void toolParameterKvMatchInputTest() {
        // TODO: test toolParameterKvMatchInput
    }

    /**
     * Test the property 'exactMatchInput'
     */
    @Test
    public void exactMatchInputTest() {
        // TODO: test exactMatchInput
    }

    /**
     * Test the property 'pairwiseMetricInput'
     */
    @Test
    public void pairwiseMetricInputTest() {
        // TODO: test pairwiseMetricInput
    }

    /**
     * Test the property 'summarizationQualityInput'
     */
    @Test
    public void summarizationQualityInputTest() {
        // TODO: test summarizationQualityInput
    }

    /**
     * Test the property 'pairwiseQuestionAnsweringQualityInput'
     */
    @Test
    public void pairwiseQuestionAnsweringQualityInputTest() {
        // TODO: test pairwiseQuestionAnsweringQualityInput
    }

    /**
     * Test the property 'fluencyInput'
     */
    @Test
    public void fluencyInputTest() {
        // TODO: test fluencyInput
    }

    /**
     * Test the property 'questionAnsweringQualityInput'
     */
    @Test
    public void questionAnsweringQualityInputTest() {
        // TODO: test questionAnsweringQualityInput
    }

    /**
     * Test the property 'bleuInput'
     */
    @Test
    public void bleuInputTest() {
        // TODO: test bleuInput
    }

    /**
     * Test the property 'toolParameterKeyMatchInput'
     */
    @Test
    public void toolParameterKeyMatchInputTest() {
        // TODO: test toolParameterKeyMatchInput
    }

    /**
     * Test the property 'groundednessInput'
     */
    @Test
    public void groundednessInputTest() {
        // TODO: test groundednessInput
    }

    /**
     * Test the property 'toolCallValidInput'
     */
    @Test
    public void toolCallValidInputTest() {
        // TODO: test toolCallValidInput
    }

    /**
     * Test the property 'rougeInput'
     */
    @Test
    public void rougeInputTest() {
        // TODO: test rougeInput
    }

    /**
     * Test the property 'fulfillmentInput'
     */
    @Test
    public void fulfillmentInputTest() {
        // TODO: test fulfillmentInput
    }

    /**
     * Test the property 'questionAnsweringCorrectnessInput'
     */
    @Test
    public void questionAnsweringCorrectnessInputTest() {
        // TODO: test questionAnsweringCorrectnessInput
    }

    /**
     * Test the property 'coherenceInput'
     */
    @Test
    public void coherenceInputTest() {
        // TODO: test coherenceInput
    }

    /**
     * Test the property 'safetyInput'
     */
    @Test
    public void safetyInputTest() {
        // TODO: test safetyInput
    }

    /**
     * Test the property 'questionAnsweringRelevanceInput'
     */
    @Test
    public void questionAnsweringRelevanceInputTest() {
        // TODO: test questionAnsweringRelevanceInput
    }

}
