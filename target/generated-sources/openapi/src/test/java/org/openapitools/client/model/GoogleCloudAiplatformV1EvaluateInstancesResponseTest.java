/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1BleuResults;
import org.openapitools.client.model.GoogleCloudAiplatformV1CoherenceResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1ExactMatchResults;
import org.openapitools.client.model.GoogleCloudAiplatformV1FluencyResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1FulfillmentResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1GroundednessResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1PairwiseMetricResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1PairwiseQuestionAnsweringQualityResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1PairwiseSummarizationQualityResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1PointwiseMetricResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1QuestionAnsweringCorrectnessResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1QuestionAnsweringHelpfulnessResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1QuestionAnsweringQualityResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1QuestionAnsweringRelevanceResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1RougeResults;
import org.openapitools.client.model.GoogleCloudAiplatformV1SafetyResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1SummarizationHelpfulnessResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1SummarizationQualityResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1SummarizationVerbosityResult;
import org.openapitools.client.model.GoogleCloudAiplatformV1ToolCallValidResults;
import org.openapitools.client.model.GoogleCloudAiplatformV1ToolNameMatchResults;
import org.openapitools.client.model.GoogleCloudAiplatformV1ToolParameterKVMatchResults;
import org.openapitools.client.model.GoogleCloudAiplatformV1ToolParameterKeyMatchResults;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudAiplatformV1EvaluateInstancesResponse
 */
public class GoogleCloudAiplatformV1EvaluateInstancesResponseTest {
    private final GoogleCloudAiplatformV1EvaluateInstancesResponse model = new GoogleCloudAiplatformV1EvaluateInstancesResponse();

    /**
     * Model tests for GoogleCloudAiplatformV1EvaluateInstancesResponse
     */
    @Test
    public void testGoogleCloudAiplatformV1EvaluateInstancesResponse() {
        // TODO: test GoogleCloudAiplatformV1EvaluateInstancesResponse
    }

    /**
     * Test the property 'toolParameterKeyMatchResults'
     */
    @Test
    public void toolParameterKeyMatchResultsTest() {
        // TODO: test toolParameterKeyMatchResults
    }

    /**
     * Test the property 'pairwiseSummarizationQualityResult'
     */
    @Test
    public void pairwiseSummarizationQualityResultTest() {
        // TODO: test pairwiseSummarizationQualityResult
    }

    /**
     * Test the property 'toolParameterKvMatchResults'
     */
    @Test
    public void toolParameterKvMatchResultsTest() {
        // TODO: test toolParameterKvMatchResults
    }

    /**
     * Test the property 'bleuResults'
     */
    @Test
    public void bleuResultsTest() {
        // TODO: test bleuResults
    }

    /**
     * Test the property 'pairwiseQuestionAnsweringQualityResult'
     */
    @Test
    public void pairwiseQuestionAnsweringQualityResultTest() {
        // TODO: test pairwiseQuestionAnsweringQualityResult
    }

    /**
     * Test the property 'rougeResults'
     */
    @Test
    public void rougeResultsTest() {
        // TODO: test rougeResults
    }

    /**
     * Test the property 'questionAnsweringCorrectnessResult'
     */
    @Test
    public void questionAnsweringCorrectnessResultTest() {
        // TODO: test questionAnsweringCorrectnessResult
    }

    /**
     * Test the property 'fluencyResult'
     */
    @Test
    public void fluencyResultTest() {
        // TODO: test fluencyResult
    }

    /**
     * Test the property 'summarizationHelpfulnessResult'
     */
    @Test
    public void summarizationHelpfulnessResultTest() {
        // TODO: test summarizationHelpfulnessResult
    }

    /**
     * Test the property 'pointwiseMetricResult'
     */
    @Test
    public void pointwiseMetricResultTest() {
        // TODO: test pointwiseMetricResult
    }

    /**
     * Test the property 'coherenceResult'
     */
    @Test
    public void coherenceResultTest() {
        // TODO: test coherenceResult
    }

    /**
     * Test the property 'fulfillmentResult'
     */
    @Test
    public void fulfillmentResultTest() {
        // TODO: test fulfillmentResult
    }

    /**
     * Test the property 'pairwiseMetricResult'
     */
    @Test
    public void pairwiseMetricResultTest() {
        // TODO: test pairwiseMetricResult
    }

    /**
     * Test the property 'questionAnsweringHelpfulnessResult'
     */
    @Test
    public void questionAnsweringHelpfulnessResultTest() {
        // TODO: test questionAnsweringHelpfulnessResult
    }

    /**
     * Test the property 'exactMatchResults'
     */
    @Test
    public void exactMatchResultsTest() {
        // TODO: test exactMatchResults
    }

    /**
     * Test the property 'toolCallValidResults'
     */
    @Test
    public void toolCallValidResultsTest() {
        // TODO: test toolCallValidResults
    }

    /**
     * Test the property 'summarizationVerbosityResult'
     */
    @Test
    public void summarizationVerbosityResultTest() {
        // TODO: test summarizationVerbosityResult
    }

    /**
     * Test the property 'questionAnsweringRelevanceResult'
     */
    @Test
    public void questionAnsweringRelevanceResultTest() {
        // TODO: test questionAnsweringRelevanceResult
    }

    /**
     * Test the property 'groundednessResult'
     */
    @Test
    public void groundednessResultTest() {
        // TODO: test groundednessResult
    }

    /**
     * Test the property 'summarizationQualityResult'
     */
    @Test
    public void summarizationQualityResultTest() {
        // TODO: test summarizationQualityResult
    }

    /**
     * Test the property 'safetyResult'
     */
    @Test
    public void safetyResultTest() {
        // TODO: test safetyResult
    }

    /**
     * Test the property 'toolNameMatchResults'
     */
    @Test
    public void toolNameMatchResultsTest() {
        // TODO: test toolNameMatchResults
    }

    /**
     * Test the property 'questionAnsweringQualityResult'
     */
    @Test
    public void questionAnsweringQualityResultTest() {
        // TODO: test questionAnsweringQualityResult
    }

}
