/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudAiplatformV1SchemaModelevaluationMetricsPairwiseTextGenerationEvaluationMetrics
 */
public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsPairwiseTextGenerationEvaluationMetricsTest {
    private final GoogleCloudAiplatformV1SchemaModelevaluationMetricsPairwiseTextGenerationEvaluationMetrics model = new GoogleCloudAiplatformV1SchemaModelevaluationMetricsPairwiseTextGenerationEvaluationMetrics();

    /**
     * Model tests for GoogleCloudAiplatformV1SchemaModelevaluationMetricsPairwiseTextGenerationEvaluationMetrics
     */
    @Test
    public void testGoogleCloudAiplatformV1SchemaModelevaluationMetricsPairwiseTextGenerationEvaluationMetrics() {
        // TODO: test GoogleCloudAiplatformV1SchemaModelevaluationMetricsPairwiseTextGenerationEvaluationMetrics
    }

    /**
     * Test the property 'humanPreferenceModelWinRate'
     */
    @Test
    public void humanPreferenceModelWinRateTest() {
        // TODO: test humanPreferenceModelWinRate
    }

    /**
     * Test the property 'precision'
     */
    @Test
    public void precisionTest() {
        // TODO: test precision
    }

    /**
     * Test the property 'falsePositiveCount'
     */
    @Test
    public void falsePositiveCountTest() {
        // TODO: test falsePositiveCount
    }

    /**
     * Test the property 'trueNegativeCount'
     */
    @Test
    public void trueNegativeCountTest() {
        // TODO: test trueNegativeCount
    }

    /**
     * Test the property 'modelWinRate'
     */
    @Test
    public void modelWinRateTest() {
        // TODO: test modelWinRate
    }

    /**
     * Test the property 'humanPreferenceBaselineModelWinRate'
     */
    @Test
    public void humanPreferenceBaselineModelWinRateTest() {
        // TODO: test humanPreferenceBaselineModelWinRate
    }

    /**
     * Test the property 'f1Score'
     */
    @Test
    public void f1ScoreTest() {
        // TODO: test f1Score
    }

    /**
     * Test the property 'accuracy'
     */
    @Test
    public void accuracyTest() {
        // TODO: test accuracy
    }

    /**
     * Test the property 'baselineModelWinRate'
     */
    @Test
    public void baselineModelWinRateTest() {
        // TODO: test baselineModelWinRate
    }

    /**
     * Test the property 'recall'
     */
    @Test
    public void recallTest() {
        // TODO: test recall
    }

    /**
     * Test the property 'cohensKappa'
     */
    @Test
    public void cohensKappaTest() {
        // TODO: test cohensKappa
    }

    /**
     * Test the property 'truePositiveCount'
     */
    @Test
    public void truePositiveCountTest() {
        // TODO: test truePositiveCount
    }

    /**
     * Test the property 'falseNegativeCount'
     */
    @Test
    public void falseNegativeCountTest() {
        // TODO: test falseNegativeCount
    }

}
