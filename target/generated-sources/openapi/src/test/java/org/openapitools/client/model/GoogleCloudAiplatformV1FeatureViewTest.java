/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeatureViewBigQuerySource;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeatureViewIndexConfig;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeatureViewSyncConfig;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeatureViewVertexRagSource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudAiplatformV1FeatureView
 */
public class GoogleCloudAiplatformV1FeatureViewTest {
    private final GoogleCloudAiplatformV1FeatureView model = new GoogleCloudAiplatformV1FeatureView();

    /**
     * Model tests for GoogleCloudAiplatformV1FeatureView
     */
    @Test
    public void testGoogleCloudAiplatformV1FeatureView() {
        // TODO: test GoogleCloudAiplatformV1FeatureView
    }

    /**
     * Test the property 'bigQuerySource'
     */
    @Test
    public void bigQuerySourceTest() {
        // TODO: test bigQuerySource
    }

    /**
     * Test the property 'indexConfig'
     */
    @Test
    public void indexConfigTest() {
        // TODO: test indexConfig
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'satisfiesPzi'
     */
    @Test
    public void satisfiesPziTest() {
        // TODO: test satisfiesPzi
    }

    /**
     * Test the property 'vertexRagSource'
     */
    @Test
    public void vertexRagSourceTest() {
        // TODO: test vertexRagSource
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'satisfiesPzs'
     */
    @Test
    public void satisfiesPzsTest() {
        // TODO: test satisfiesPzs
    }

    /**
     * Test the property 'featureRegistrySource'
     */
    @Test
    public void featureRegistrySourceTest() {
        // TODO: test featureRegistrySource
    }

    /**
     * Test the property 'syncConfig'
     */
    @Test
    public void syncConfigTest() {
        // TODO: test syncConfig
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

}
