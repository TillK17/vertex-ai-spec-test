/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * Contact: info@stackql.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.Any;
import org.openapitools.client.model.GoogleCloudAiplatformV1DeployedModelRef;
import org.openapitools.client.model.GoogleCloudAiplatformV1EncryptionSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1ExplanationSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelBaseModelSource;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelContainerSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelDataStats;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelExportFormat;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelOriginalModelInfo;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelSourceInfo;
import org.openapitools.client.model.GoogleCloudAiplatformV1PredictSchemata;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudAiplatformV1Model
 */
public class GoogleCloudAiplatformV1ModelTest {
    private final GoogleCloudAiplatformV1Model model = new GoogleCloudAiplatformV1Model();

    /**
     * Model tests for GoogleCloudAiplatformV1Model
     */
    @Test
    public void testGoogleCloudAiplatformV1Model() {
        // TODO: test GoogleCloudAiplatformV1Model
    }

    /**
     * Test the property 'pipelineJob'
     */
    @Test
    public void pipelineJobTest() {
        // TODO: test pipelineJob
    }

    /**
     * Test the property 'explanationSpec'
     */
    @Test
    public void explanationSpecTest() {
        // TODO: test explanationSpec
    }

    /**
     * Test the property 'supportedOutputStorageFormats'
     */
    @Test
    public void supportedOutputStorageFormatsTest() {
        // TODO: test supportedOutputStorageFormats
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'versionDescription'
     */
    @Test
    public void versionDescriptionTest() {
        // TODO: test versionDescription
    }

    /**
     * Test the property 'encryptionSpec'
     */
    @Test
    public void encryptionSpecTest() {
        // TODO: test encryptionSpec
    }

    /**
     * Test the property 'originalModelInfo'
     */
    @Test
    public void originalModelInfoTest() {
        // TODO: test originalModelInfo
    }

    /**
     * Test the property 'satisfiesPzs'
     */
    @Test
    public void satisfiesPzsTest() {
        // TODO: test satisfiesPzs
    }

    /**
     * Test the property 'supportedInputStorageFormats'
     */
    @Test
    public void supportedInputStorageFormatsTest() {
        // TODO: test supportedInputStorageFormats
    }

    /**
     * Test the property 'artifactUri'
     */
    @Test
    public void artifactUriTest() {
        // TODO: test artifactUri
    }

    /**
     * Test the property 'metadataArtifact'
     */
    @Test
    public void metadataArtifactTest() {
        // TODO: test metadataArtifact
    }

    /**
     * Test the property 'predictSchemata'
     */
    @Test
    public void predictSchemataTest() {
        // TODO: test predictSchemata
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'containerSpec'
     */
    @Test
    public void containerSpecTest() {
        // TODO: test containerSpec
    }

    /**
     * Test the property 'baseModelSource'
     */
    @Test
    public void baseModelSourceTest() {
        // TODO: test baseModelSource
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'versionUpdateTime'
     */
    @Test
    public void versionUpdateTimeTest() {
        // TODO: test versionUpdateTime
    }

    /**
     * Test the property 'satisfiesPzi'
     */
    @Test
    public void satisfiesPziTest() {
        // TODO: test satisfiesPzi
    }

    /**
     * Test the property 'deployedModels'
     */
    @Test
    public void deployedModelsTest() {
        // TODO: test deployedModels
    }

    /**
     * Test the property 'dataStats'
     */
    @Test
    public void dataStatsTest() {
        // TODO: test dataStats
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'versionAliases'
     */
    @Test
    public void versionAliasesTest() {
        // TODO: test versionAliases
    }

    /**
     * Test the property 'metadataSchemaUri'
     */
    @Test
    public void metadataSchemaUriTest() {
        // TODO: test metadataSchemaUri
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'supportedDeploymentResourcesTypes'
     */
    @Test
    public void supportedDeploymentResourcesTypesTest() {
        // TODO: test supportedDeploymentResourcesTypes
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'versionCreateTime'
     */
    @Test
    public void versionCreateTimeTest() {
        // TODO: test versionCreateTime
    }

    /**
     * Test the property 'versionId'
     */
    @Test
    public void versionIdTest() {
        // TODO: test versionId
    }

    /**
     * Test the property 'supportedExportFormats'
     */
    @Test
    public void supportedExportFormatsTest() {
        // TODO: test supportedExportFormats
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'trainingPipeline'
     */
    @Test
    public void trainingPipelineTest() {
        // TODO: test trainingPipeline
    }

    /**
     * Test the property 'modelSourceInfo'
     */
    @Test
    public void modelSourceInfoTest() {
        // TODO: test modelSourceInfo
    }

}
